---
name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  create:
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/black
            ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: pre-commit/action@v2.0.3

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: pip install poetry && poetry install
      - name: Test
        run: poetry run pytest

  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"
      - name: Install Dependencies
        run: pip install poetry && poetry install
      - name: Run smoke test
        run: poetry run ./tests/run-smoketest.sh

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"
      - name: Install Dependencies
        run: pip install poetry && poetry install
      - name: Run Coverage
        run: poetry run pytest --cov=.

  publish:
    runs-on: ubuntu-latest
    needs: [lint, unit-test, smoke-test, coverage]
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v1
      - name: Build and publish to PyPi
        uses: JRubics/poetry-publish@v1.10
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
